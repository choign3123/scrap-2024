name: Build & Deploy Dev Project (push)

on:
  push:
    branches: [ "develop" ]
  workflow_call:


jobs:
  # 빌드 및 도커 이미지 생성&push
  build_and_push_image: # 빌드하고 배포하기
    runs-on: ubuntu-latest # 우분투 최신 버전에서 실행됨.
    permissions:
      contents: read # 내용 읽기만 가능함.

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      shell: bash

    - name: Build with Gradle
      run: ./gradlew clean build
      shell: bash

    - name: check is there .jar file
      run: |
        cd ./build/libs
        ls -a
      shell: bash

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Set up Docker Buildx # 빌드킷 빌더 인스턴스 만들기.
      uses: docker/setup-buildx-action@v3
      
    - name: Build and push # 이미지를 빌드하고, Docker Hub에 푸시하기.
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/scrap2024:dev


  # AWS CodeDeploy 사용하여 배포
  deploy_to_AWS:
    needs: build_and_push_image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
          aws-region: ap-northeast-2

      - name: Code Deploy
        run: |
          aws deploy create-deployment \
          --application-name scrap-github-app \
          --deployment-config-name CodeDeployDefault.OneAtATime \
          --deployment-group-name scrap-github-dev-group \
          --description "Scrap deployment demo" \
          --github-location repository=choign3123/scrap-2024,commitId=$GITHUB_SHA
          

  # commit id 확인
  check_commit_id:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: print GITHUB_SHA
        run: echo "commit id=${{ github.sha }}"

      - name: get last commit id of PR
        run: echo "Commit ID=${{ github.event.pull_request.head.sha }}"